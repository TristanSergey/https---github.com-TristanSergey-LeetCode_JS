// Вам дан целочисленный массив nums с нулевым индексом и целое число k.
// Возвращает целое число, обозначающее сумму элементов в числах, 
// соответствующие индексы которых имеют ровно k заданных битов в их двоичном представлении.
// Установленные биты в целом числе представляют собой единицы, когда оно записано в двоичном формате.
// Например, двоичное представление числа 21 — это 10101, имеющее 3 установленных бита.
// Перебрать индексы i в диапазоне[0, n - 1], для каждого индекса i подсчитать количество битов в его 
// двоичном представлении.Если это k, добавьте к результату nums[i].
// 2859


nums = [5, 10, 1, 5, 2], k = 1;
nums = [4, 3, 2, 1], k = 2

var sumIndicesWithKSetBits = function (nums, k) {
    let totalSum = 0;
    for (let i = 0; i < nums.length; i++) {
        if (i.toString(2).split('').reduce((acc, item) => item === '1' ? acc + 1 : acc, 0) === k) totalSum += nums[i];
    }
    return totalSum;
};


console.log(sumIndicesWithKSetBits(nums, k))